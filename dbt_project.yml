
# Name your package! Package names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models

name: 'dialogue'
version: '1.0'

# This setting configures which "profile" dbt uses for this project. Profiles contain
# database connection information, and should be configured in the  ~/.dbt/profiles.yml file
profile: 'dialogue'

# These configurations specify where dbt should look for different types of files.
# The `source-paths` config, for example, states that source models can be found
# in the "models/" directory. You probably won't need to change these!
source-paths: ["models"]
analysis-paths: ["analysis"] 
test-paths: ["tests", "models/xero/tests", "models/salesforce/tests",
  "models/scribe/tests"]
data-paths: ["data"]
macro-paths: ["macros"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
    - "target"
    - "dbt_modules"

quoting:
  identifier: false
  schema: false

# You can define configurations for models in the `source-paths` directory here.
# Using these configurations, you can enable or disable models, change how they
# are materialized, and more!

# In this example config, we tell dbt to build all models in the example/ directory
# as views (the default). Try changing `view` to `table` below, then re-running dbt
models:
  dialogue:
      # Send a timestamp for all models create and complete to analytics_audit
      pre-hook:
        - "create schema if not exists {{this.schema}}_audit"
        - "create table if not exists {{this.schema}}_audit.dbt_audit_log (
            event_name text,
            event_timestamp timestamp,
            event_schema text,
            event_model text,
            invocation_id text
        )"
        - "insert into {{this.schema}}_audit.dbt_audit_log (
            event_name,
            event_timestamp,
            event_schema,
            event_model,
            invocation_id
          ) values (
            'starting model run',
            clock_timestamp(),
            '{{this.schema}}',
            '{{this.name}}',
            '{{ invocation_id }}'
        )"
      post-hook:
        - "insert into {{this.schema}}_audit.dbt_audit_log (
            event_name,
            event_timestamp,
            event_schema,
            event_model,
            invocation_id
          ) values (
            'completed model run',
            clock_timestamp(),
            '{{this.schema}}',
            '{{this.name}}',
            '{{ invocation_id }}'
        )"
      # Model Folder Materializations
      coredata:
          materialized: table
      dimension:
          materialized: table
      github:
          materialized: table
      messaging:
          transform:
              materialized: view
      meta:
          materialized: table
      salesforce:
          materialized: table
      scribe:
          materialized: table
      tableau:
          materialized: table
      typeform:
          materialized: table
      usher:
          materialized: table
      wiw:
          materialized: table
      xero:
          materialized: table
      # Global Variables
      vars:
          nps_category: ['promoter', 'passive', 'detractor']

archive:
    - source_schema: analytics
      target_schema: archive{{ var("schema_suffix", "_dev") }}
      tables:
        - source_table: nps_patient_list
          target_table: nps_patient_list_archived
          updated_at: timestamp
          unique_key: concat(user_id, timestamp)

        - source_table: nps_dm_list
          target_table: nps_dm_list_archived
          updated_at: timestamp
          unique_key: concat(email, timestamp)

        - source_table: scribe_contracts
          target_table: scribe_contracts_archived
          updated_at: imported_at
          unique_key: contract_id

        - source_table: scribe_organizations
          target_table: scribe_organizations_archived
          updated_at: imported_at
          unique_key: organization_id

        - source_table: scribe_plan_features
          target_table: scribe_plan_features_archived
          updated_at: imported_at
          unique_key: concat(feature_id, plan_id)

        - source_table: scribe_plans
          target_table: scribe_plans_archived
          updated_at: imported_at
          unique_key: plan_id

        - source_table: scribe_users
          target_table: scribe_users_archived
          updated_at: received_at
          unique_key: user_id

seeds:
  dialogue:
    enabled: true

    data_finance_adjusted_revenue_monthly:
      column_types:
        date_month: timestamp
        account_id: text
        account_name: text
        amount: float
        revenue_type: text

    data_finance_pilot_expansions:
      column_types:
        date_month: timestamp
        account_id: text

    data_scribe_organizations_billing_start_date:
      column_types:
        organization_id: bigint
        billing_start_date: timestamptz

    data_finance_opex:
      column_types:
        date_month: timestamp
        department: text
        delta: float

    data_finance_gm_breakdown:
      column_types:
        date_month: timestamp
        gm_source: text
        value: float

    data_finance_rampup_costs:
      column_types:
        date_month: timestamp
        cost_ae_ramp: float
        cost_eae_ramp: float

    data_finance_revenue_and_costs_monthly:
      column_types:
        date_month: timestamp
        telehealth_revenue: float
        mrr: float
        fl_gp_cost: float
        fl_np_cost: float
        fl_nc_cost: float
        fl_cc_cost: float
        other_cost: float
        adjustments_np: float
        adjustments_nc: float
        adjustments_cc: float
        licence_cost: float
        saas_cost: float

    data_mm_dxa_cc:
      column_types:
        episode_id: text
        cc: text
        timestamp: timestamp

    data_dimension_province:
      column_types:
        province_name: text
        province_code: text
        region: text

    data_salesforce_pipeline_probabilities_default:
      column_types:
        segment_group: text
        stage_name: text
        probability: float
